query ItemsWithMetrics(
  $epoch_start: Int!
  $epoch_end: Int!
  $types: [String!]
  $tags: [String!]
  $custom_tags: [String!]
  $item_ids: [ID!]
  $item_regex: String
  $related_to_types: [String!]
  $related_to_tags: [String!]
  $related_to_custom_tags: [String!]
  $related_to_item_ids: [ID!]
  $related_to_item_regex: String
  $configs: [String!]!
  $formulas: [String!]!
  $summary: Int
  $samples: Int
  $use_forecast: Boolean!
  $frequency: String
  $periods: Int
  $flexibility: Float
) {
  items(
   selector:[{
      custom_tags: $custom_tags
      types: $types
      tags: $tags
      item_ids: $item_ids
      item_regex: $item_regex
      related_to: [{
        custom_tags: $related_to_custom_tags
        types: $related_to_types
        tags: $related_to_tags
        item_ids: $related_to_item_ids
        item_regex: $related_to_item_regex
    	}]
    }]
    epoch_start: $epoch_start
    epoch_end: $epoch_end
  ) {
    id
    item_type
    tags
    label
    ...Configs
    ...Metrics
    __typename
  }
}

fragment Configs on Item {
  configs (
    epoch_end: $epoch_end
    epoch_start: $epoch_start
    fields: $configs
    summary: $summary
    samples: $samples
  ) {
    tuple {
      value
      epoch
    }
    start_epoch
    summary
    field
    data
  }
}

fragment Metrics on Item {
  metrics(
    epoch_end: $epoch_end
    epoch_start: $epoch_start
    formulas: $formulas
    summary: $summary
    samples: $samples
  ) {
    start_epoch
    pretty_data
    display_data
    summary
    formula
    data
    ...MetricsForecast @include(if: $use_forecast)
    __typename
  }
  __typename
}

fragment MetricsForecast on Metric {
  forecast(opts:{
    frequency: $frequency,
    periods: $periods,
    flexibility: $flexibility
  }) {
    actual
    time
    forecast
    upper
    lower
	}

}

